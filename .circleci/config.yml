version: 2.1
aliases:
  - &restore_go_modules
    restore_cache:
      name: "Restore Go Modules"
      keys:
        - go-mod-v1-{{ checksum "go.sum" }}

  - &all_test
    - "Unit Test"
    - "Integration Test"

jobs:
  "Build":
    docker:
      - image: golang:1.12.8
    working_directory: ~/apas-todo-apiserver
    steps:
      - checkout

      - *restore_go_modules

      - run: go build
      - run:
          name: Grant Go Modules
          command: chmod -R 777 /go/pkg/mod

      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

  "Unit Test":
    docker:
      - image: golang:1.12.8
    working_directory: ~/apas-todo-apiserver
    steps:
      - checkout

      - *restore_go_modules

      - run: make unit_ci

      - run:
          name: Upload codecov
          command: |
            bash <(curl -s https://codecov.io/bash) -F unittests || 
            echo 'Codecov failed to upload'

  "Integration Test":
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true
    environment:
      GOPATH: /go
    steps:
      - checkout

      - run:
          name: Install Go Runtime 1.12.5
          command: |
            curl -L https://storage.googleapis.com/golang/go1.12.5.linux-amd64.tar.gz > ~/go.tar.gz
            sudo tar -C ~ -xvf ~/go.tar.gz 1> /dev/null
            sudo rm -rf /usr/local/go
            sudo mv ~/go /usr/local 
            sudo mkdir -p $GOPATH
            sudo chmod -R 777 $GOPATH

      - restore_cache:
          name: "Restore Go Modules"
          keys:
            - go-mod-v2-{{ checksum "go.sum" }}

      - run: make integration_ci

      - run:
          name: Upload codecov
          command: |
            bash <(curl -s https://codecov.io/bash) -F integration ||
            echo 'Codecov failed to upload'

      - save_cache:
          key: go-mod-v2-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

  "Push Docker Image":
    machine:
      docker_layer_caching: true
    steps:
      - checkout

      - run: echo "export VERSION=alpha-b$CIRCLE_BUILD_NUM" >> $BASH_ENV

      - run:
          name: Login Github Registry
          command: docker login docker.pkg.github.com --username gghcode -p $GITHUB_TOKEN

      - run:
          name: Build Docker Image
          command: docker build
            --build-arg BUILD_APP_VERSION=$VERSION
            --tag docker.pkg.github.com/gghcode/apas-todo-apiserver/app:$VERSION .

      - run:
          name: Push Docker Image
          command: docker push docker.pkg.github.com/gghcode/apas-todo-apiserver/app:$VERSION

workflows:
  version: 2
  build-test:
    jobs:
      - "Build"
      - "Unit Test":
          requires:
            - "Build"
      - "Integration Test":
          requires:
            - "Build"
      - "Push Docker Image":
          requires: *all_test
          filters:
            branches:
              only: master
