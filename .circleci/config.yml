version: 2.1
aliases:
  - &restore_go_modules
    restore_cache:
      name: "Restore Go Modules"
      keys:
        - go-mod-v1-{{ checksum "go.sum" }}

  - &all_test
    - "Unit Test"
    - "Integration Test"

jobs:
  "Build":
    docker:
      - image: golang:1.12.8
    working_directory: ~/apas-todo-apiserver
    steps:
      - checkout

      - *restore_go_modules

      - run: go build

      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

  "Unit Test":
    docker:
      - image: golang:1.12.8
    working_directory: ~/apas-todo-apiserver
    steps:
      - checkout

      - *restore_go_modules

      - run: make unit_ci

      - run:
          name: Upload codecov
          command: |
            bash <(curl -s https://codecov.io/bash) -F unittests || 
            echo 'Codecov failed to upload'

  "Integration Test":
    docker:
      - image: circleci/golang:1.12
    environment:
      DOCKER_DRIVER: overlay2
    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true

      - run: ifconfig
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose

      - *restore_go_modules

      - run: make integration_ci

      - run:
          name: Upload codecov
          command: |
            bash <(curl -s https://codecov.io/bash) -F integration ||
            echo 'Codecov failed to upload'

  "Build Docker Image":
    machine:
      docker_layer_caching: true
    working_directory: ~/apas-todo-apiserver
    steps:
      - checkout

      - run: docker build -t apas-todo-apiserver .
      - run: mkdir -p /tmp/images
      - run: docker save -o /tmp/images/app.tar apas-todo-apiserver

      - store_artifacts:
          path: /tmp/images
          destination: app.tar

workflows:
  version: 2
  build-test:
    jobs:
      - "Build"
      - "Unit Test":
          requires:
            - "Build"
      - "Integration Test":
          requires:
            - "Build"
      # - "Build Docker Image":
      #     requires: *all_test
