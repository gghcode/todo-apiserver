image: golang:1.12.4-alpine

stages:
  - build
  - test
  - build-and-test
  - staging

build-binary:
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - /go/pkg/mod
  before_script:
    - apk add --no-cache ca-certificates git
    - go mod download
  script:
    - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build

# build-docker-image:
#   stage: build-and-test
#   image: docker:18.09.5-git
#   services:
#     - docker:dind
#   script:
#     - mkdir image
#     - docker build -t $CI_REGISTRY_IMAGE .
#     - docker save -o image/app.tar $CI_REGISTRY_IMAGE
#   artifacts:
#     paths:
#       - image/

run-unittests:
  stage: test
  image: circleci/golang:1.12
  script:
    - make unit_ci

run-integration-test:
  stage: test
  image: circleci/golang:1.12
  variables:
    DOCKER_HOST: tcp://docker:2375/
    # When using dind, it's wise to use the overlayfs driver for
    # improved performance.
    DOCKER_DRIVER: overlay2
  services:
    - docker:dind
  script:
    - sudo apt install docker-compose
    - make integration_ci
# push-docker-image:
#   stage: staging
#   image: docker:18.09.5-git
#   services:
#     - docker:dind
#   before_script:
#     - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
#   script:
#     - docker load -i image/app.tar
#     - docker push registry.gitlab.com/gyuhwan/apas-todo-apiserver
#   only:
#     - master
