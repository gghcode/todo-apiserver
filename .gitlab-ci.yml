image: circleci/golang:1.12

variables:
  GOFLAGS: -mod=readonly
  GOPATH: ${CI_PROJECT_DIR}/vendor/go

stages:
  - dependencies
  - build
  - test
  - build-and-test
  - staging

.modcache: &modcache
  key: modcache
  paths:
    - vendor/go/pkg/mod/

dependencies:
  stage: dependencies
  script: go mod download
  cache: *modcache

build-binary:
  stage: build
  cache:
    <<: *modcache
    policy: pull
  script:
    - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build

run-unittests:
  stage: test
  image: circleci/golang:1.12
  cache:
    <<: *modcache
    policy: pull
  script:
    - make unit_ci
  after_script:
    - bash <(curl -s https://codecov.io/bash)

run-integration-test:
  stage: test
  image: circleci/golang:1.12
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
  services:
    - docker:dind
  cache:
    <<: *modcache
    policy: pull
  script:
    - sudo apt install docker-compose
    - make integration_ci
  after_script:
    - bash <(curl -s https://codecov.io/bash)

push-docker-image:
  stage: staging
  image: docker:18.09.5-git
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
  script:
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker push registry.gitlab.com/gyuhwan/apas-todo-apiserver
  only:
    - master
