on: [push]
name: Actions CI Workflow
env:
  BUILD_VERSION: b${{ github.run_id }}
  go_version: "1.14.4"
  tf_version: "0.12.26"
  tf_working_dir: "terraform"
jobs:
  "Terraform-Format":
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ${{ env.tf_working_dir }}
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.tf_version }}

      - run: terraform fmt -check

  "Terraform-Validate":
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ${{ env.tf_working_dir }}
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.tf_version }}

      - name: Terraform Validate
        run: |
          terraform init -backend=false -input=false -no-color
          terraform validate -no-color

  "Build":
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: DOCKER_BUILDKIT=1 docker build
          --build-arg BUILD_APP_VERSION=$BUILD_VERSION
          -t gcr.io/vapias/todo-apiserver:latest
          "."

      - run: docker save gcr.io/vapias/todo-apiserver:latest > image.tar

      - uses: actions/upload-artifact@v1
        with:
          name: docker-image-tar
          path: image.tar

  "Integration-Test":
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2-beta
        with:
          go-version: ${{ env.go_version }}

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - run: make integration_ci
      - uses: codecov/codecov-action@v1
        with:
          flags: integration

  "Unit-Test":
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2-beta
        with:
          go-version: ${{ env.go_version }}

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - run: make unit_ci
      - uses: codecov/codecov-action@v1
        with:
          flags: unittests

  "Push-Docker-Image":
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    needs:
      - "Terraform-Format"
      - "Terraform-Validate"
      - "Build"
      - "Integration-Test"
      - "Unit-Test"
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: docker-image-tar

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "286.0.0"
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - run: |
          gcloud auth configure-docker --quiet
          docker load --input docker-image-tar/image.tar
          docker tag gcr.io/vapias/todo-apiserver gcr.io/vapias/todo-apiserver:$BUILD_VERSION
          docker push gcr.io/vapias/todo-apiserver:latest
          docker push gcr.io/vapias/todo-apiserver:$BUILD_VERSION

  "Deploy":
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.tf_working_dir }}
    needs:
      - "Push-Docker-Image"
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TF_VAR_jwt_secret_key: ${{ secrets.JWT_SECRET_KEY }}
      TF_VAR_postgres_host: ${{ secrets.POSTGRES_HOST }}
      TF_VAR_postgres_user: ${{ secrets.POSTGRES_USER }}
      TF_VAR_postgres_name: ${{ secrets.POSTGRES_NAME }}
      TF_VAR_postgres_password: ${{ secrets.POSTGRES_PASSWORD }}
      TF_VAR_redis_addr: ${{ secrets.REDIS_ADDR }}
      TF_VAR_redis_password: ${{ secrets.REDIS_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.tf_version }}
          cli_config_credentials_token: ${{ secrets.TF_TOKEN }}

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "286.0.0"
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: "Terraform Apply"
        run: |
          cat prod.template.tfvars | IMAGE_TAG=$BUILD_VERSION envsubst > prod.tfvars
          terraform init -input=false -no-color
          terraform apply -input=false -auto-approve -no-color -var-file="prod.tfvars"
