on: [push, pull_request]
name: Actions CI Workflow
env:
  BUILD_VERSION: b${{ github.run_id }}
jobs:
  "Build":
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: DOCKER_BUILDKIT=1 docker build
          --build-arg BUILD_APP_VERSION=$BUILD_VERSION
          -t docker.pkg.github.com/gghcode/apas-todo-apiserver/app
          "."

      - name: Export Docker Image
        run: docker save docker.pkg.github.com/gghcode/apas-todo-apiserver/app > image.tar

      - uses: actions/upload-artifact@v1
        with:
          name: docker-image-tar
          path: image.tar
  "Integration-Test":
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2-beta
        with:
          go-version: "^1.13.1"

      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Integration Test
        run: make integration_ci

      - name: Upload codecov
        run: |
          bash <(curl -s https://codecov.io/bash) -F integration ||
            echo 'Codecov failed to upload'
  "Unit-Test":
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2-beta
        with:
          go-version: "^1.13.1"

      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Unit Test
        run: make unit_ci

      - name: Upload codecov
        run: |
          bash <(curl -s https://codecov.io/bash) -F unittests || 
            echo 'Codecov failed to upload'

  "Push-Docker-Image-GCR":
    runs-on: ubuntu-latest
    needs:
      - "Build"
      - "Integration-Test"
      - "Unit-Test"
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: docker-image-tar

      - uses: actions/setup-python@v1
        with:
          python-version: '3.x'
          architecture: 'x64'      

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '285.0.0'
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          # export_default_credentials: true

      - name: Login GCR
        run: gcloud beta auth configure-docker

      - name: Load docker image
        run: docker load --input docker-image-tar/image.tar

      - name: Tag docker image
        run: docker tag
          gcr.io/vapias/todo-apiserver:latest
          gcr.io/vapias/todo-apiserver:$BUILD_VERSION

      - name: Push docker image
        run: |
          docker push gcr.io/vapias/todo-apiserver:latest
          docker push gcr.io/vapias/todo-apiserver:$BUILD_VERSION

  "Push-Docker-Image":
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    needs:
      - "Build"
      - "Integration-Test"
      - "Unit-Test"
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: docker-image-tar

      - name: Github package registry login
        run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Load docker image
        run: docker load --input docker-image-tar/image.tar

      - name: Tag docker image
        run: docker tag
          docker.pkg.github.com/gghcode/apas-todo-apiserver/app:latest
          docker.pkg.github.com/gghcode/apas-todo-apiserver/app:$BUILD_VERSION

      - name: Push docker image
        run: |
          docker push docker.pkg.github.com/gghcode/apas-todo-apiserver/app:latest
          docker push docker.pkg.github.com/gghcode/apas-todo-apiserver/app:$BUILD_VERSION
